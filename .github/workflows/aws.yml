name: Deploy to Amazon ECS

on:
  push:
    branches: [ "main.js" ]

env:
  AWS_REGION: us-east-1                   # Reemplazar con tu región preferida de AWS, por ejemplo, us-west-1
  ECR_REPOSITORY: my-ecr-repo             # Reemplazar con el nombre de tu repositorio de Amazon ECR
  ECS_SERVICE: my-ecs-service             # Reemplazar con el nombre de tu servicio de Amazon ECS
  ECS_CLUSTER: my-ecs-cluster             # Reemplazar con el nombre de tu clúster de Amazon ECS
  ECS_TASK_DEFINITION: .aws/task-def.json # Reemplazar con la ruta a tu archivo de definición de tarea de Amazon ECS
  CONTAINER_NAME: my-container            # Reemplazar con el nombre del contenedor en la sección containerDefinitions de tu definición de tarea

permissions:
  contents: read

jobs:
  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    environment: production

    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v2
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ env.AWS_REGION }}

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1

    - name: Build, tag, and push image to Amazon ECR
      id: build-image
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        IMAGE_TAG: ${{ github.sha }}
      run: |
        docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
        docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
        echo "image=$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG" >> $GITHUB_OUTPUT

    - name: Fill in the new image ID in the Amazon ECS task definition
      id: task-def
      uses: aws-actions/amazon-ecs-render-task-definition@v1
      with:
        task-definition: ${{ env.ECS_TASK_DEFINITION }}
        container-name: ${{ env.CONTAINER_NAME }}
        image: ${{ steps.build-image.outputs.image }}

    - name: Deploy Amazon ECS task definition
      uses: aws-actions/amazon-ecs-deploy-task-definition@v1
      with:
        task-definition: ${{ steps.task-def.outputs.task-definition }}
        service: ${{ env.ECS_SERVICE }}
        cluster: ${{ env.ECS_CLUSTER }}
        wait-for-service-stability: true
